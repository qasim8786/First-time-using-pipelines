# -*- coding: utf-8 -*-
"""First major project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1E-XVSUzKffdfIAmDInjTAbbuCcz3H4O0
"""

import pandas as pd
import numpy as np
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder,MinMaxScaler
from sklearn.preprocessing import OrdinalEncoder
from sklearn.model_selection import train_test_split
from sklearn.feature_selection import SelectKBest, chi2
from sklearn.tree import DecisionTreeClassifier
from sklearn.pipeline import Pipeline,make_pipeline

import seaborn as sns

df = sns.load_dataset("titanic")

# Keeping only the specified columns
df = df[['survived', 'pclass', 'sex', 'age', 'sibsp', 'parch', 'fare', 'embarked']]
df.head()

X_train, X_test, y_train, y_test = train_test_split(df.drop(columns='survived'),df['survived'],test_size=0.2,random_state=42)

X_train.head()

trf1 = ColumnTransformer([
    ('impute_age', SimpleImputer(), [2]),
    ('impute_embarked', SimpleImputer(strategy='most_frequent'), [6])
], remainder='passthrough')

# One Hot Encoding
trf2 = ColumnTransformer([
    ('ohe_sex_embarked', OneHotEncoder(sparse_output=False, handle_unknown='ignore'), [1, 6])
], remainder='passthrough')

# Scaling
trf3 = ColumnTransformer([
    ('scale', MinMaxScaler(), slice(0, 10))
])
trf4 = SelectKBest(score_func=chi2, k=5)

trf5 = DecisionTreeClassifier()

pipeline = Pipeline([
    ('trf1', trf1),
    ('trf2', trf2),
    ('trf3', trf3),
    ('trf4', trf4),
    ('trf5', trf5)
])

pipeline.fit(X_train,y_train)

y_pred = pipeline.predict(X_test)

from sklearn.metrics import accuracy_score
accuracy_score(y_test,y_pred)

# GridSearchCV
params = {
    'trf5__max_depth': [1, 2, 3, 4, 5, None]
}

from sklearn.model_selection import GridSearchCV

grid = GridSearchCV(pipeline, params, cv=5, scoring='accuracy')
grid.fit(X_train, y_train)

grid.best_score_

grid.best_params_

import pickle

pickle.dump(pipeline,open('pipeline.pkl','wb'))

# Commented out IPython magic to ensure Python compatibility.
# %%writefile requirements.txt
# pandas==2.0.3
# numpy==1.24.3
# scikit-learn==1.2.2
# seaborn==0.12.2

